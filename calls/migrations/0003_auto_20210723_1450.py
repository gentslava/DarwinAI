# Generated by Django 3.2.5 on 2021-07-23 07:50

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('calls', '0002_alter_record_call'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Calls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_matching', models.FloatField(null=True, verbose_name='Соответствие скрипту')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Начало разговора')),
                ('interruptions', models.IntegerField(default=0, verbose_name='Прерывания')),
                ('record', models.FileField(upload_to='records/', verbose_name='Запись')),
                ('text', models.TextField(null=True, verbose_name='Расшифровка разговора')),
                ('emotions', models.TextField(null=True, verbose_name='Эмоции')),
                ('volume_vector', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=None)),
                ('advices_given', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='calls.advices', verbose_name='Советы даны')),
            ],
        ),
        migrations.CreateModel(
            name='MandatoryQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название кратко')),
                ('question', models.TextField(verbose_name='Вопрос')),
            ],
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.FileField(null=True, upload_to='records/', verbose_name='Запись')),
            ],
        ),
        migrations.CreateModel(
            name='StopWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=150)),
            ],
        ),
        migrations.RemoveField(
            model_name='data',
            name='call',
        ),
        migrations.RemoveField(
            model_name='mandatoryquestion',
            name='call',
        ),
        migrations.RemoveField(
            model_name='record',
            name='call',
        ),
        migrations.RemoveField(
            model_name='stopword',
            name='call',
        ),
        migrations.DeleteModel(
            name='Advice',
        ),
        migrations.DeleteModel(
            name='Data',
        ),
        migrations.DeleteModel(
            name='MandatoryQuestion',
        ),
        migrations.DeleteModel(
            name='Record',
        ),
        migrations.DeleteModel(
            name='StopWord',
        ),
        migrations.AddField(
            model_name='calls',
            name='mandatory_question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calls.mandatoryquestions'),
        ),
        migrations.AddField(
            model_name='calls',
            name='stop_words',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='calls.stopwords'),
        ),
        migrations.AlterField(
            model_name='client',
            name='calls',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calls.calls'),
        ),
    ]
